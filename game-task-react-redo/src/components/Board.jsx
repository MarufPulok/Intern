import "./board.css";
import { React,useState } from "react";
import CircleContainer from "./CircleContainer";
import PopUp from "./CustomPopUp";

const Board = () => {
  const [gameRunning, setGameRunning] = useState(false);
  const [gameLost, setGameLost] = useState(false);
  const [gameWon, setGameWon] = useState(false);
  const [attempt, setAttempt] = useState(0);
  const [level, setLevel] = useState(localStorage.getItem("level"));
  const [target, setTarget] = useState(0);
  const [score, setScore] = useState(0);
  const [clickScore, setClickScore] = useState(0);
  const [circle, setCircle] = useState([]);

  const handleClick = () => {
    setGameRunning(true);
    setAttempt(Math.floor(Math.random() * 26));
    setTarget(Math.floor(Math.random() * 26) + 25);
    setLevel(localStorage.getItem("level"));
  };

  const generateCircle = (newClickScore) => {
    const newCircle = [];
    for (let i = 0; i < newClickScore; i++) {
      newCircle.push(<div className="circle">{newClickScore}</div>);
    }
    setCircle([...circle, ...newCircle]);
  };

  function handleWin() {
    setGameRunning(false);
    setGameWon(true);
    const newLevel = parseInt(localStorage.getItem("level")) + 1;
    localStorage.setItem("level", newLevel);
    setLevel(newLevel);

    setAttempt(0);
    setTarget(0);
    setScore(0);
    setClickScore(0);
    setCircle([]);
  }

  function handleLose() {
    setGameRunning(false);
    setGameLost(true);
    setAttempt(0);
    setTarget(0);
    setScore(0);
    setClickScore(0);
    setCircle([]);
  }

 

  function handlePlay() {
    const newClickScore = Math.floor(Math.random() * 5) + 1;
    setClickScore(newClickScore);
    generateCircle(newClickScore);
    if (score + newClickScore <= target)
    setScore((prevScore) => prevScore + newClickScore);
    setAttempt(attempt - 1);
    if (gameWon || gameLost) {
      setGameWon(false);
      setGameLost(false);
    } else {
      if (score === target) {
        handleWin();
      }else if (attempt === 0) {
        handleLose();
      } else if (score > target && attempt > 0) {
        handlePlay();
      }
    }
  }

  const handleNewGameStart = () => {
    setGameLost(false);
    setGameWon(false);
    setGameRunning(true);
    setAttempt(Math.floor(Math.random() * 26));
    setTarget(Math.floor(Math.random() * 26) + 25);
    setLevel(localStorage.getItem("level"));
  };

  return (
    <>
      <div className="game-title">
        <h1>Game of Luck</h1>
        <h2>You are at Level: {level}</h2>
        <h2>Target: {target}</h2>
        <h2>Attempts Left: {attempt}</h2>
        {!gameRunning && !gameLost && !gameWon ? (
          <button className="button-29" onClick={handleClick}>
            Start Game
          </button>
        ) : (
          <button
            className="button-29"
            onClick={handlePlay}
            disabled={gameWon || gameLost}
          >
            Click to Generate Circles
          </button>
        )}
      </div>
      {gameRunning && (
        <>
          <h2 style={{ textAlign: "center" }}>
            Circles Generated By this Click: {clickScore}
          </h2>
          <h2 style={{ textAlign: "center" }}>Score: {score}</h2>
          <CircleContainer
            clickScore={clickScore}
            score={score}
            attempt={attempt}
            circle={circle}
          />
        </>
      )}
      {gameWon && (
        <>
          <PopUp
            text="You Won!"
            onClick={handleNewGameStart}
            score={score}
            target={target}
            attempt={attempt}
          />
        </>
      )}

      {gameLost && (
        <>
          <PopUp
            text="You Lose!"
            onClick={handleNewGameStart}
            score={score}
            target={target}
            attempt={attempt}
          />
        </>
      )}
    </>
  );
};

export default Board;
